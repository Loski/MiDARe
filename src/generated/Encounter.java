package generated;

// default package
// Generated 15 oct. 2017 04:58:57 by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Encounter generated by hbm2java
 */
@Entity
@Table(name = "encounter", catalog = "sanglier")
public class Encounter implements java.io.Serializable {

	private Integer idEncounter;
	private Sport sport;
	private Team teamByIdTeam1;
	private Team teamByIdTeam2;
	private int scoreTeam1;
	private int scoreTeam2;
	private String stateEncounter;
	private Date dateEncounter;
	private Set bets = new HashSet(0);

	public Encounter() {
	}

	public Encounter(Sport sport, Team teamByIdTeam1, Team teamByIdTeam2, int scoreTeam1, int scoreTeam2) {
		this.sport = sport;
		this.teamByIdTeam1 = teamByIdTeam1;
		this.teamByIdTeam2 = teamByIdTeam2;
		this.scoreTeam1 = scoreTeam1;
		this.scoreTeam2 = scoreTeam2;
	}

	public Encounter(Sport sport, Team teamByIdTeam1, Team teamByIdTeam2, int scoreTeam1, int scoreTeam2,
			String stateEncounter, Date dateEncounter, Set bets) {
		this.sport = sport;
		this.teamByIdTeam1 = teamByIdTeam1;
		this.teamByIdTeam2 = teamByIdTeam2;
		this.scoreTeam1 = scoreTeam1;
		this.scoreTeam2 = scoreTeam2;
		this.stateEncounter = stateEncounter;
		this.dateEncounter = dateEncounter;
		this.bets = bets;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_encounter", unique = true, nullable = false)
	public Integer getIdEncounter() {
		return this.idEncounter;
	}

	public void setIdEncounter(Integer idEncounter) {
		this.idEncounter = idEncounter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_sport", nullable = false)
	public Sport getSport() {
		return this.sport;
	}

	public void setSport(Sport sport) {
		this.sport = sport;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_team_1", nullable = false)
	public Team getTeamByIdTeam1() {
		return this.teamByIdTeam1;
	}

	public void setTeamByIdTeam1(Team teamByIdTeam1) {
		this.teamByIdTeam1 = teamByIdTeam1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_team_2", nullable = false)
	public Team getTeamByIdTeam2() {
		return this.teamByIdTeam2;
	}

	public void setTeamByIdTeam2(Team teamByIdTeam2) {
		this.teamByIdTeam2 = teamByIdTeam2;
	}

	@Column(name = "score_team_1", nullable = false)
	public int getScoreTeam1() {
		return this.scoreTeam1;
	}

	public void setScoreTeam1(int scoreTeam1) {
		this.scoreTeam1 = scoreTeam1;
	}

	@Column(name = "score_team_2", nullable = false)
	public int getScoreTeam2() {
		return this.scoreTeam2;
	}

	public void setScoreTeam2(int scoreTeam2) {
		this.scoreTeam2 = scoreTeam2;
	}

	@Column(name = "state_encounter", length = 7)
	public String getStateEncounter() {
		return this.stateEncounter;
	}

	public void setStateEncounter(String stateEncounter) {
		this.stateEncounter = stateEncounter;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_encounter", length = 19)
	public Date getDateEncounter() {
		return this.dateEncounter;
	}

	public void setDateEncounter(Date dateEncounter) {
		this.dateEncounter = dateEncounter;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encounter")
	public Set<Bet> getBets() {
		return this.bets;
	}

	public void setBets(Set bets) {
		this.bets = bets;
	}

}
